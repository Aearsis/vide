#!/usr/bin/bash

[ $# -ge 1 ] || die "Usage: $0 <project name> [...]"

set -e

project="$1"; shift
project_path=$CDPATH
cache_path="$HOME/.cache/vide"

die() {
	echo "$@" >&2
	exit 1
}

########################################
# Cscope handling                      #
########################################

vide_cscope_cache_clean() {
	>"$cache_dir/cscope.files"
}

# Add files to the cscope using find - use absolute paths
vide_cscope_find() {
	find "$@" >>"$cache_dir/cscope.files"
}

# Add files by find matching regex
vide_cscope_regex() {
	path=$1
	regex=$2
	vide_cscope_find $path -type f -regex "$regex"
}

# Add C project files
vide_cscope_c() {
	vide_cscope_regex $1 "^.*\.[ch]$"
}

# Run the cscope
vide_cscope() {
	export CSCOPE_DB="$cache_dir/cscope.out"
	cscope -b -U -q -f"$CSCOPE_DB" -i"$cache_dir/cscope.files" "$@"
}

########################################
# The script itself                    #
########################################

for rcfile in "/etc/viderc" "$HOME/.viderc";do
	if [ -f "$rcfile" ];then
		source "$rcfile"
	fi
done

if [ -z "$project_file" ]; then
	for path in ${project_path//:/ };do
		project_file="$path/$project/.viderc"
		[ -e "$project_file" ] && break
	done
fi

[ -e "$project_file" ] || die "No such project found."

project_id=$(md5sum <<< $project_file | cut -c-16)
cache_dir="$cache_path/$project_id"

mkdir -p "$cache_dir"

vide_cscope_cache_clean

cd $(dirname $project_file)

# The project file shall exec.
source $project_file

# If not, just execute vim.
vim
